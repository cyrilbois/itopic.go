
关机：shutdown -h now
修改欢饮信息: vi /etc/motd

http://blog.jobbole.com/50121/


-- ------------------------------------------------------------
CentOS
-- ------------------------------------------------------------

yum -y update
升级所有包，改变软件设置和系统设置,系统版本内核都升级

yum -y upgrade
升级所有包，不改变软件设置和系统设置，系统版本升级，内核不改变


-- ------------------------------------------------------------
OpenResty
-- ------------------------------------------------------------
# yum -y install readline-devel pcre-devel openssl-devel perl gcc
# wget https://openresty.org/download/openresty-1.9.7.4.tar.gz
# tar zxvf openresty-1.9.7.4.tar.gz 
# cd openresty-1.9.7.4
# ./configure --prefix=/usr/local/server/openresty1.9.7 \
--with-luajit \
--without-http_redis2_module \
--with-http_iconv_module
# gmake
# gmake install


-- 检测配置文件
/usr/local/server/openresty1.9.7/nginx/sbin/nginx -t
-- 启动nginx
/usr/local/server/openresty1.9.7/nginx/sbin/nginx
-- 重启动nginx
/usr/local/server/openresty1.9.7/nginx/sbin/nginx reload

killall -9 nginx;


-- 参考配置
#user  nobody;

worker_processes 2;
error_log /data/log/nginx/nginx_error.log crit;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65536;

events
	{
		use epoll;
		worker_connections 65536;
	}

http
	{
		include       mime.types;
		default_type  application/octet-stream;

		server_names_hash_bucket_size 128;
		client_header_buffer_size 32k;
		large_client_header_buffers 4 32k;
		client_max_body_size 50m;

		sendfile on;
		tcp_nopush     on;

		keepalive_timeout 60;

		tcp_nodelay on;

		fastcgi_connect_timeout 300;
		fastcgi_send_timeout 300;
		fastcgi_read_timeout 300;
		fastcgi_buffer_size 64k;
		fastcgi_buffers 4 64k;
		fastcgi_busy_buffers_size 128k;
		fastcgi_temp_file_write_size 256k;

		gzip on;
		gzip_min_length  1k;
		gzip_buffers     4 16k;
		gzip_http_version 1.0;
		gzip_comp_level 2;
		gzip_types       text/plain application/x-javascript text/css application/xml;
		gzip_vary on;
		log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
             '$status $body_bytes_sent "$http_referer" '
             '"$http_user_agent" $http_x_forwarded_for';

		#limit_zone  crawler  $binary_remote_addr  10m;
        server {
                listen 80 default;
                return 500;
        }
		include vhost/*.conf;
}

server
{
    listen       80;
    server_name localhost;
    index index.html index.php;
    root  /data/www/public;
    location / 
    {
        if (!-e $request_filename)
        {
            rewrite . /index.php last;
        }
    }
    location ~ .*\.(php|php5)?$
    {
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi.conf;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        expires      30d;
    }

    location ~ .*\.(js|css)?$
    {
        expires      12h;
    }
    access_log  /data/log/nginx/localhost_access.log  access;
}









-- ------------------------------------------------------------
MYSQL http://www.2cto.com/database/201510/447675.html
-- ------------------------------------------------------------
# groupadd mysql
# useradd -s /sbin/nologin -g mysql mysql
# mkdir -p /data/mysql/3306
# chown -R mysql:mysql 3306/

安装依赖包
# yum -y install gcc gcc-c++ ncurses ncurses-devel cmake

下载相应源码包，从MySQL 5.7.5开始Boost库是必需的
# wget http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz
# wget http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.12.tar.gz

预编译
# tar zxvf mysql-5.7.12.tar.gz
# cd mysql5.7.2
# cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/server/mysql5.7.12 \
-DMYSQL_DATADIR=/data/mysql/3306 \
-DSYSCONFDIR=/data/mysql/3306 \
-DDEFAULT_CHARSET=utf8mb4 \
-DDEFAULT_COLLATION=utf8mb4_unicode_ci  \
-DEXTRA_CHARSETS=all \
-DENABLED_LOCAL_INFILE=1 \
-DDOWNLOAD_BOOST=1 \
-DWITH_BOOST=/root/package

# make
# make install

初始化数据库
/usr/local/server/mysql5.7.12/bin/mysqld \
--initialize-insecure \
--user=mysql \
--basedir=/usr/local/server/mysql5.7.12 \
--datadir=/data/mysql/3306/data
注：
之前版本mysql_install_db是在mysql_basedir/script下，5.7放在了mysql_install_db/bin目录下,且已被废弃
2016-04-15 17:25:52 [WARNING] mysql_install_db is deprecated. Please consider switching to mysqld --initialize
2016-04-15 17:25:52 [ERROR]   The data directory needs to be specified.
“–initialize”会生成一个随机密码(~/.mysql_secret)，而”–initialize-insecure”不会生成密码
–datadir目标目录下不能有数据文件

# cp support-files/my-default.cnf /data/mysql/3306/my.cnf


启动
/usr/local/server/mysql5.7.12/bin/mysqld_safe --defaults-file=/data/mysql/3306/my.cnf > /dev/null &

关闭
/usr/local/server/mysql5.7.12/bin/mysqladmin -uroot -p -h localhost -P3306 shutdown


set password = "123456"


grant all privileges on *.* to root@'%' identified by '123456';
flush privileges;

mysql> show warnings;
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
| Level   | Code | Message                                                                                                                            |
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
| Warning | 1287 | Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement. |
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

CREATE USER 'dog'@'localhost' IDENTIFIED BY '123456'; 
CREATE USER 'pig'@'192.168.1.101_' IDENDIFIED BY '123456'; 
CREATE USER 'pig'@'%' IDENTIFIED BY '123456'; 
CREATE USER 'pig'@'%' IDENTIFIED BY ''; 
CREATE USER 'pig'@'%'; 
http://www.jb51.net/article/54258.htm

CREATE DATABASE IF NOT EXISTS asm_im DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;



## my.cnf
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It's a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.

[mysqld]

user = mysql
# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
innodb_buffer_pool_size = 128M

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

# These are commonly set, remove the # and set as required.
basedir = /usr/local/webserver/mysql
datadir = /data/mysql/3306/data
port = 3306
server_id = 1
socket = /tmp/mysql.sock

# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
join_buffer_size = 128M
sort_buffer_size = 2M
read_rnd_buffer_size = 2M 

sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

auto_increment_increment = 1
slow_query_log
long_query_time = 3 
innodb_file_per_table = 1










-- ------------------------------------------------------------
REDIS
-- ------------------------------------------------------------
You need tcl 8.5 or newer in order to run the Redis test

# yum -y install tcl

# wget http://download.redis.io/releases/redis-3.0.7.tar.gz
# tar zxvf redis-3.0.7.tar.gz
# cd redis-3.0.7
# mkdir -p /usr/local/server/redis3.0.7
# make prefix=/usr/local/server/redis3.0.7 install
# cp redis.conf /etc/
# /usr/local/server/redis3.0.7/bin/redis-server /etc/redis.conf&









-- ------------------------------------------------------------
PHP
-- ------------------------------------------------------------
安装libmcrypt
configure: error: mcrypt.h not found. Please reinstall libmcrypt.
# wget https://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz/download
# mv download libmcrypt-2.5.8.tar.gz 
# tar zxvf libmcrypt-2.5.8.tar.gz 
# cd libmcrypt-2.5.8
# ./configure --prefix=/usr/local
# make
# make install

configure: error: Don't know how to define struct flock on this system, set --enable-opcache=no
# echo "/usr/local/lib" >> /etc/ld.so.conf.d/local.conf
# ldconfig -v


# wget http://cn2.php.net/get/php-7.0.5.tar.gz/from/this/mirror
# mv mirror php-7.0.5.tar.gz
# tar zxvf php-7.0.5.tar.gz
# cd php-7.0.5
# yum -y install gcc gcc-c++ libxml2 libxml2-devel autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel  zlib zlib-devel glibc glibc-devel glib2 glib2-devel libcurl libcurl--devel curl-devel curl libmcrypt libmcrypt-devel   bzip2 bzip2-devel libmcrypt libmcrypt-devel
# ./configure --prefix=/usr/local/server/php7.0.5 \
--with-config-file-path=/usr/local/server/php7.0.5/etc \
--enable-fpm \
--enable-opcache \
--with-mcrypt \
--with-zlib \
--enable-mbstring \
--with-curl \
--disable-debug  \
--disable-rpath \
--enable-inline-optimization \
--with-bz2  \
--with-zlib \
--enable-sockets \
--enable-sysvsem \
--enable-sysvshm \
--enable-pcntl \
--enable-mbregex \
--with-mhash \
--enable-shmop  \
--enable-zip \
--with-pcre-regex  \
--with-gd  \
--with-gettext  \
--enable-bcmath  \
--with-png-dir  \
--with-freetype-dir \
--with-jpeg-dir \
--with-openssl \
--enable-pdo \
--with-pdo-mysql \
--enable-mysqlnd \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd 

# make
# make install
# cp php.ini-production /usr/local/server/php7.0.5/lib/php.ini
# cd /usr/local/server/php7.0.5/etc
# cp php-fpm.conf.default php-fpm.conf
# vi php-fpm.conf

# cp php-fpm.d/www.conf.default php-fpm.d/www.conf

# /usr/local/server/php7.0.5/sbin/php-fpm





<h4>php-fpm重启、终止</h4>

php 5.3.3 源码中已经内嵌了 php-fpm，不用象以前的php版本一样专门打补丁了，只需要在configure的时候添加编译参数即可。不再支持 php-fpm 以前具有的 /usr/local/php/sbin/php-fpm (start|stop|reload)等命令，需要使用信号控制：
<blockquote>
master 进程可以理解以下信号：
INT, TERM 立刻终止
QUIT 平滑终止
USR1 重新打开日志文件
USR2 平滑重载所有worker进程并重新载入配置和二进制模块
</blockquote>

<b>示例：</b>

[code]
php-fpm 关闭：
# kill -INT `cat /usr/local/server/php7.0.5/var/run/php-fpm.pid`
php-fpm 重启：
# kill -USR2 `cat /usr/local/server/php/var/run/php-fpm.pid`

<b>添加到自启动</b>
[code]
# echo '/usr/local/server/php7.0.5/sbin/php-fpm' >>/etc/rc.local
[/code]

-- 设置时区
date.timezone = PRC
-- 去掉头PHP返回
expose_php = Off


ln -s /usr/local/webserver/php7.0.5/bin/php /usr/bin/php

-- ------------------------------------------------------------
安装REDIS扩展
-- ------------------------------------------------------------
# wget https://github.com/phpredis/phpredis/archive/php7.zip
# unzip php7.zip
# cd phpredis-php7
# /usr/local/server/php7.0.5/bin/phpize
# ./configure --with-php-config=/usr/local/server/php7.0.5/bin/php-config
# make
# make install













#!/bin/sh

mysql_port=3306
mysql_username="root"
mysql_password="vps.mysql"

function_start_mysql()
{
    printf "Starting MySQL...\n"
    /bin/sh /usr/local/server/mysql5.7.12/bin/mysqld_safe --defaults-file=/data/mysql/${mysql_port}/my.cnf 2>&1 > /dev/null &
}

function_stop_mysql()
{
    printf "Stoping MySQL...\n"
    /usr/local/server/mysql5.7.12/bin/mysqladmin -u ${mysql_username} -p${mysql_password} -h localhost -P ${mysql_port} shutdown
}

function_restart_mysql()
{
    printf "Restarting MySQL...\n"
    function_stop_mysql
    sleep 5
    function_start_mysql
}

function_kill_mysql()
{
    kill -9 $(ps -ef | grep 'bin/mysqld_safe' | grep ${mysql_port} | awk '{printf $2}')
    kill -9 $(ps -ef | grep 'libexec/mysqld' | grep ${mysql_port} | awk '{printf $2}')
}

if [ "$1" = "start" ]; then
    function_start_mysql
elif [ "$1" = "stop" ]; then
    function_stop_mysql
elif [ "$1" = "restart" ]; then
function_restart_mysql
elif [ "$1" = "kill" ]; then
function_kill_mysql
else
    printf "Usage: mysql.sh {start|stop|restart|kill}\n"
fi


## mysqlback.sh
#!/bin/bash
#by hz

suffix=`date "+%Y%m%d"`.sql
dir="/data/mysql_backup"
pro="/usr/local/webserver/mysql/bin/mysqldump"
myDBuser="root"
myDBpassword='|rI9lX9#2=h2%mQI'
db_list="/root/db.txt"

if [[ ! -d $dir ]]
then
        mkdir $dir
fi

function do_bk()
{
cd $dir
cat ${db_list}|grep -v "#"|while read db
do
        $pro -u${myDBuser} -p${myDBpassword} ${db}|gzip >${db}-${suffix}.gz
done
}

function do_cb()
{
        find ${dir}  -mtime +180 -exec rm -rf {} \;
}
##backup
do_bk
do_cb








wget https://nodejs.org/dist/v4.4.3/node-v4.4.3.tar.gz
tar zxvf node-v4.4.3.tar.gz

## 安装nodejs
wget https://nodejs.org/dist/v4.4.3/node-v4.4.3-linux-x64.tar.xz
xz -d node-v4.4.3-linux-x64.tar.xz
tar xvf node-v4.4.3-linux-x64.tar
mv node-v4.4.3-linux-x64 /usr/local/webserver/
cd /usr/local/webserver/
mv node-v4.4.3-linux-x64/ node4.4.3
ln -s /usr/local/webserver/node4.4.3/bin/node /usr/local/bin/node
ln -s /usr/local/webserver/node4.4.3/bin/npm /usr/local/bin/npm

-- 增加环境变量

安装：npm install -g pm2
启动程序：pm2 start <app_name|id|all>
　　可以指定应用名称 pm2 start app,js --name=test

列举进程：pm2 list
退出程序：pm2 stop <app_name|id|all>
重起应用：pm2 restart
程序信息：pm2 describe id|all
监控：pm2 monit
实时集中log处理: pm2 logs
API:pm2 web (端口：9615 )

npm install -g cnpm --registry=https://registry.npm.taobao.org
https://npm.taobao.org/mirrors/node/v6.9.1/


## 防火墙
# Generated by iptables-save v1.4.7 on Fri Aug 14 17:51:04 2015
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [42:3048]
-A INPUT -i lo -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -s 10.169.92.240 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -s 121.8.107.2 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -s 116.22.232.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -s 116.22.233.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -s 116.22.234.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -s 116.22.235.0/24 -p tcp -m tcp --dport 3306 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 3306 -j DROP 
COMMIT
# Completed on Fri Aug 14 17:51:04 2015



## FTP http://www.ttlsa.com/linux/how-to-install-pureftpd/

# wget https://download.pureftpd.org/pub/pure-ftpd/releases/pure-ftpd-1.0.42.tar.gz
# tar zxvf pure-ftpd-1.0.42.tar.gz
# cd pure-ftpd-1.0.42
# ./configure \
--prefix=/usr/local/server/pureftpd1.0.42 \
-with-everything
# make
# make install

# cp configuration-file/pure-config.pl /usr/local/server/pureftpd1.0.42/bin/
# chmod 755 /usr/local/server/pureftpd1.0.42/bin/pure-config.pl
# mkdir /usr/local/server/pureftpd1.0.42/etc
# cp configuration-file/pure-ftpd.conf /usr/local/server/pureftpd1.0.42/etc/

# groupadd www
# useradd -s /sbin/nologin -g www www


# /usr/local/pureftpd/bin/pure-config.pl /usr/local/pureftpd/etc/pure-ftpd.conf
# ./pure-pw useradd asm_im -u www -d /data/www/asm_im -m
//pure-pw useradd 虚拟用户名 –u 寄生到系统用户名 –d FTP目录 –m（把用户密码加入PDB数据库中，不需要重启FTP）

# ln -s /usr/local/server/pureftpd1.0.42/sbin/pure-ftpd /usr/sbin/
# ln -s /usr/local/server/pureftpd1.0.42/bin/pure-pw /usr/sbin/
bind 0.0.0.0,21
/usr/local/server/pureftpd1.0.42/bin/pure-config.pl /usr/local/server/pureftpd1.0.42/etc/pure-ftpd.conf




## 增加环境变量
# vi /etc/profile
export PATH=$PATH:/usr/local/webserver/node4.4.3/bin

[root@iZ94t8ds2sqZ asm_im]# source /etc/profile
[root@iZ94t8ds2sqZ asm_im]# echo $PATH